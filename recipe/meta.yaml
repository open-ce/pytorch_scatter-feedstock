{% set name = "torch_scatter" %}
{% set version = "2.0.8" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
#{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}
{% if build_type == 'cpu' %}
   {% set torch_proc_type = "cpu" %}
{% elif build_type == "cuda" %}
   {% set torch_proc_type = "cuda" %}
{% endif %}

package:
  name: py{{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: d71aab489b5288a6c96e9f9a7c9e13c54774dcb55a99a40e6cd1aca8be9ef3e6

build:
  number: 1
  #string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  #string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}                                      # [cuda_compiler_version == "None"]
{% if build_type == 'cpu' %}
  string: h{{ PKG_HASH }}_{{ build_type }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}
{% else %}
  string: h{{ PKG_HASH }}_{{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}
{% endif %}
  skip: true  # [win]
  script:
    - export FORCE_CUDA="1"    # [linux64 and cudatoolkit  not in (undefined, 'None')]
    - export CC="$GCC"         # [linux64 and cudatoolkit  not in (undefined, 'None')]
    - {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - sysroot_linux-64 ==2.17                # [linux64]
    - python {{ python }}                    # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - pytorch-base {{ pytorch }}             # [build_platform != target_platform]
    #- pytorch =*={{ torch_proc_type }}*     # [build_platform != target_platform]
  host:
    - python {{ python }}
    - pip
    - pytorch-base {{ pytorch }} 
    #- pytorch =*={{ torch_proc_type }}*
    - pytest-runner
  run:
    - python
  run_constrained:
    # 2022/02/05 hmaarrfk
    # While conda packaging seems to allow us to specify
    # constraints on the same package in different lines
    # the resulting package doesn't have the ability to
    # be specified in multiples lines
    # This makes it tricky to use run_exports
    # we add the GPU constraint in the run_constrained
    # to allow us to have "two" constraints on the
    # running package
    #- pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - torch_scatter
about:
  home: https://github.com/rusty1s/pytorch_scatter
  summary: PyTorch Extension Library of Optimized Scatter Operations
  license: MIT
  license_file: LICENSE
  dev_url: https://github.com/rusty1s/pytorch_scatter

extra:
  recipe-maintainers:
    - Tobias-Fischer
    - mxr-conda
    - rluria14
    - oblute
    - ndmaxar
    - benjaminrwilson
    - Tobias-Fischer
